[tool.poetry]
name = "retail_agent"
version = "0.2.0"
description = "RL Agent Benchmarking for Personalized Retail Promotions"
authors = ["Yu Xia", "Sriram Narayanamoorthy", "Joshua Mabry"]
readme = "README.md"
license = "Apache-2.0"
repository = "https://github.com/RetailMarketingAI/retailsynth-agentsim"

[[tool.poetry.source]]
name = "jax"
url = "https://storage.googleapis.com/jax-releases/jax_cuda_releases.html"
priority = "explicit"

[tool.poetry.dependencies]
python = ">=3.10, <3.11"
retailsynth = { git = "https://github.com/RetailMarketingAI/retailsynth.git"}
jaxlib = [
    { platform = "linux", version = "0.4.23+cuda11.cudnn86", source = "jax" },
    { platform = "darwin", version = "0.4.23",  source = "pypi"},
]
numpyro = [
    { platform = "linux", extras = [
        "cuda",
    ], version = "^0.13.2" },
    { platform = "darwin", version = "^0.13.2", extras = []},
]


# Hardcode the tensorflow version to match the AWS DLAMI
tensorflow = [
    { platform = "linux", version = "2.13.0", extras=["and-cuda"]},
    { platform = "darwin", version = "2.13.0"}
]
tensorflow-macos = { version = "^2.13.0", markers = "platform_system=='Darwin' and platform_machine=='arm64'" }
tensorflow-metal= { version = "^1.1.0", markers = "platform_system=='Darwin' and platform_machine=='arm64'" }

# Hardcode tf-agents to match tensorflow version based on https://pypi.org/project/tf-agents/
tf-agents = [
    { platform = "linux", extras = [
        "reverb",
    ], version = "=0.17.0" },
    { platform = "darwin", version = "=0.17.0", extras = []},
]
boto3 = "^1.34.67"
sagemaker = "^2.214.0"
hydra-joblib-launcher = "^1.2.0"

[tool.poetry.group.dev.dependencies]
isort = "^5.13.2"
git-lfs = "^1.6"
ipdb = "^0.13.13"
ipykernel = "^6.20.2"
ipython = "^8.8.0"
jupyterlab = "^3.5.3"
jupytext = "^1.14.5"
nbval = "^0.10.0"
pre-commit = "^2.21.0"
pytest = "^7.2.1"
pytest-cov = "^4.0.0"
setuptools = "^66.0.0"
wheel = "^0.38.4"
codespell = "^2.2.4"
vulture = "^2.7"
nbqa = "^1.7.1"
ruff = "0.1.14"
mypy = "^1.3.0"
no-implicit-optional = "^1.3"

[tool.jupytext]
formats = ["ipynb", "md"]

[tool.pytest.ini_options]
filterwarnings = "ignore::DeprecationWarning"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
# Increase the maximum line length to 400 characters to avoid conflict with black.
line-length = 400
exclude = ["tests/*"]

[tool.ruff.lint]
select = ["D", "F401"]
ignore = ["D100", "D101", "D102", "D103", "D104", "D301"]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.codespell]
ignore-words-list = "mape, smap, nd"
skip = ".venv,.pytest_cache,.ruff_cahce,./.git"

[tool.vulture]
make_whitelist = true
ignore_names = ["kwargs"]
min_confidence = 90
paths = ["src"]
verbose = false