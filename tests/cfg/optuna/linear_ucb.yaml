agent_type: linear_ucb
study:
  directions: ['maximize']
  sampler:
    _target_: optuna.samplers.TPESampler
n_trial: 2
n_job_in_parallel: 1
n_instance_per_trial: 1
n_eval_trajectories: 2
consider_past_trials: True
sleep_time: 300 # seconds
params:
  'alpha':
    type: 'float' # categorical or float or int
    low: 0.1
    high: 0.9
  'context_features':
    type: 'categorical' # categorical or float or int
    value: [[
      'avg_purchase_price', 
      'avg_purchase_quantity', 
      'avg_purchase_probability', 
      'avg_redeemed_discount', 
      'avg_purchase_discount', 
      'previous_transaction',
      'product_price', 
      'marketing_feature',
      'observed_customer_product_feature',
      ],
    ]
  'gamma':
    type: 'float' # categorical or float or int
    low: 0.1
    high: 0.9
batch_job_train:
  job_name: ${optuna.agent_type}_parameter_tuning
  job_queue: "experiment_workflow"
  job_definition: "parameter_tuning"
  config_path: "../tests/cfg"
  command: ["python", "workflow/optuna_job.py", "step=train", "synthetic_data=${synthetic_data.name}", "pyenv=${pyenv.name}"]
  memory: '300000' # need to be string format
  vcpus: '4' # need to be string format
  timeout: 72000 # seconds
batch_job_eval:
  job_name: ${optuna.agent_type}_parameter_tuning_eval
  job_queue: "experiment_workflow"
  job_definition: "parameter_tuning"
  command: ["python", "workflow/optuna_job.py", "step=eval", "synthetic_data=${synthetic_data.name}", "pyenv=${pyenv.name}"]
  memory: '10000' # need to be string format
  vcpus: '2' # need to be string format
  timeout: 72000 # seconds